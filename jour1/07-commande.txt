git log => la liste de tous les commit 
commit 82e630821de0c87cae2b7872b682b98794e6528a (HEAD -> main)
Author: Felicia Ayodeji <felicia.ayodeji55@gmail.com>
Date:   Mon Mar 27 14:29:33 2023 +0200

    fin exo

	git log --oneline => version plus compact de git log 
id version courte a0dc31f 

revenir dans le passé
-----------------------------------
 
git diff connaitre les diférences entre repository et projet 
pour tous les fichiers qui ne sont pas add

git diff --help
 
 git diff jour1/07-commande.txt
 -------------------------------------------
 commande permet de navigateur entre les commits
 revenir dans le passé (revenir dans les précédent commit)

 git log --oneline

 git checkout a0dc31f(venir dans le passé)
 attention le fait de revenir dans le passé permet de regarder
 MAIS vous ne pouvez pas modifier /add /commit

 revenir maintenant
   git checkout main
   git checkout master

   -----------------------------
   git revert (copier un ancien commit pour le mettre comme commit actuel)
   git reset  (supprimer des commits entre maintenant et l'id du commit) 

   git log -oneline 
     git reset <id> --hard
    Attestion git reset détruit supprimer les commits (impossible de les récupérer)

	pas possible de revenur en arrière sur un rest

	=> commande à utiliser si on peut pas faire autrement
	=> revenir en arrière sans  tout supprimer

	git reflog => journal de toutes les opérations que tu as réalisées

-----------------------------------------------
 git branch recuperation (you put the id of the repository that was deleted , it will help to get the deleted things)
 -----------------------------------
 to get all the deleted commit use things commande 
 // supprimé // récupérer la suppression
 git reset (id number) --hard
 git add --all
 git commit -m "sauvegarde"
 git reflog
git branch recuperation <id reflog avant le reset> 
git merge


